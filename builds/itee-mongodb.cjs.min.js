"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var r=require("itee-validators"),t=e(require("path")),s=require("buffer"),n=e(require("fs")),a=require("stream"),i=require("itee-utils"),o=require("mongoose");console.log("Itee.Database v8.0.2 - EsModule");
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class TDatabaseController
 * @classdesc The TDatabaseController is the base class to perform CRUD operations on the database
 */
class u{static __checkData(e,t,s){const n=t.body,a=t.params,i=t.query;return r.isDefined(n)&&n[e]?n[e]:r.isDefined(a)&&a[e]?a[e]:r.isDefined(i)&&i[e]?i[e]:void u.returnError({title:"Erreur de paramètre",message:`${e} n'existe pas dans les paramètres !`},s)}static _formatError(e){let t=[];if(r.isArray(e))for(let r=0,s=e.length;r<s;++r)t=t.concat(u._formatError(e[r]));else if(r.isObject(e))if("ValidationError"===e.name){let r="",s=e.errors;for(let e in s)Object.prototype.hasOwnProperty.call(s,e)&&(r+=s[e].message+"<br>");t.push({title:"Erreur de validation",message:r||"Aucun message d'erreur... Gloups !"})}else"VersionError"===e.name?t.push({title:"Erreur de base de donnée",message:"Aucun document correspondant n'as put être trouvé pour la requete !"}):t.push({title:e.title||"Erreur",message:e.message||"Aucun message d'erreur... Gloups !"});else{if(!r.isString(e))throw new Error(`Unknown error type: ${e} !`);t.push({title:"Erreur",message:e})}return t}static returnNotFound(e){if(r.isFunction(e))return e();e.headersSent||e.status(204).end()}static returnError(e,t){if(r.isFunction(t))return t(e,null);if(t.headersSent)return;const s=u._formatError(e);t.format({"application/json":()=>{t.status(500).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnData(e,t){if(r.isFunction(t))return t(null,e);if(t.headersSent)return;const s=r.isArray(e)?e:[e];t.format({"application/json":()=>{t.status(200).json(s)},default:()=>{t.status(406).send("Not Acceptable")}})}static returnErrorAndData(e,t,s){if(r.isFunction(s))return s(e,t);if(s.headersSent)return;const n={errors:e,datas:t};s.format({"application/json":()=>{s.status(416).json(n)},default:()=>{s.status(416).send("Range Not Satisfiable")}})}constructor(e={}){const r={driver:null,useNext:!1,...e};this._driver=r.driver,this._useNext=r.useNext}return(e,t={}){const s=Object.assign({immediate:null,beforeAll:null,beforeReturnErrorAndData:null,afterReturnErrorAndData:null,beforeReturnError:null,afterReturnError:null,beforeReturnData:null,afterReturnData:null,beforeReturnNotFound:null,afterReturnNotFound:null,afterAll:null},t,{returnErrorAndData:u.returnErrorAndData.bind(this),returnError:u.returnError.bind(this),returnData:u.returnData.bind(this),returnNotFound:u.returnNotFound.bind(this)});return s.immediate&&s.immediate(),function(t=null,n=null){const a=r.isDefined(n),i=r.isDefined(t);s.beforeAll&&s.beforeAll(),a&&i?(s.beforeReturnErrorAndData&&s.beforeReturnErrorAndData(t,n),s.returnErrorAndData(t,n,e),s.afterReturnErrorAndData&&s.afterReturnErrorAndData(t,n)):a&&!i?(s.beforeReturnData&&s.beforeReturnData(n),s.returnData(n,e),s.afterReturnData&&s.afterReturnData(n)):!a&&i?(s.beforeReturnError&&s.beforeReturnError(t),s.returnError(t,e),s.afterReturnError&&s.afterReturnError(t)):a||i||(s.beforeReturnNotFound&&s.beforeReturnNotFound(),s.returnNotFound(e),s.afterReturnNotFound&&s.afterReturnNotFound()),s.afterAll&&s.afterAll()}}create(e,t,s){const n=e.body;r.isNotDefined(n)?u.returnError({title:"Erreur de paramètre",message:"Le corps de la requete ne peut pas être null ou indefini."},this._useNext?s:t):r.isArray(n)?r.isEmptyArray(n)?u.returnError({title:"Erreur de paramètre",message:"Le tableau d'objet de la requete ne peut pas être vide."},this._useNext?s:t):this._createMany(n,t,s):r.isObject(n)?r.isEmptyObject(n)?u.returnError({title:"Erreur de paramètre",message:"L'objet de la requete ne peut pas être vide."},this._useNext?s:t):this._createOne(n,t,s):u.returnError({title:"Erreur de paramètre",message:"Le type de donnée de la requete est invalide. Les paramètres valides sont objet ou un tableau d'objet."},this._useNext?s:t)}_createOne(){}_createMany(){}read(e,t,s){const n=e.params.id,a=e.body,i=r.isDefined(a),o=i?a.ids:null,l=i?a.query:null,d=i?a.projection:null;r.isDefined(n)?r.isNotString(n)?u.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):r.isEmptyString(n)||r.isBlankString(n)?u.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._readOne(n,d,t,s):r.isDefined(o)?r.isNotArray(o)?u.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):r.isEmptyArray(o)?u.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._readMany(o,d,t,s):r.isDefined(l)?r.isNotObject(l)?u.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):r.isEmptyObject(l)?this._readAll(d,t,s):this._readWhere(l,d,t,s):u.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être null."},this._useNext?s:t)}_readOne(){}_readMany(){}_readWhere(){}_readAll(){}update(e,t,s){const n=e.params.id,a=e.body,i=r.isDefined(a),o=i?a.ids:null,l=i?a.query:null,d=i?a.update:null;r.isNotDefined(d)?u.returnError({title:"Erreur de paramètre",message:"La mise à jour a appliquer ne peut pas être null ou indefini."},this._useNext?s:t):r.isDefined(n)?r.isNotString(n)?u.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):r.isEmptyString(n)||r.isBlankString(n)?u.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._updateOne(n,d,t,s):r.isDefined(o)?r.isNotArray(o)?u.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):r.isEmptyArray(o)?u.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._updateMany(o,d,t,s):r.isDefined(l)?r.isNotObject(l)?u.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):r.isEmptyObject(l)?this._updateAll(d,t,s):this._updateWhere(l,d,t,s):u.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?s:t)}_updateOne(){}_updateMany(){}_updateWhere(){}_updateAll(){}delete(e,t,s){const n=e.params.id,a=e.body,i=r.isDefined(a),o=i?a.ids:null,l=i?a.query:null;r.isDefined(n)?r.isNotString(n)?u.returnError({title:"Erreur de paramètre",message:"L'identifiant devrait être une chaine de caractères."},this._useNext?s:t):r.isEmptyString(n)||r.isBlankString(n)?u.returnError({title:"Erreur de paramètre",message:"L'identifiant ne peut pas être une chaine de caractères vide."},this._useNext?s:t):this._deleteOne(n,t,s):r.isDefined(o)?r.isNotArray(o)?u.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants devrait être un tableau de chaine de caractères."},this._useNext?s:t):r.isEmptyArray(o)?u.returnError({title:"Erreur de paramètre",message:"Le tableau d'identifiants ne peut pas être vide."},this._useNext?s:t):this._deleteMany(o,t,s):r.isDefined(l)?r.isNotObject(l)?u.returnError({title:"Erreur de paramètre",message:"La requete devrait être un objet javascript."},this._useNext?s:t):r.isEmptyObject(l)?this._deleteAll(t,s):this._deleteWhere(l,t,s):u.returnError({title:"Erreur de paramètre",message:"La requete ne peut pas être vide."},this._useNext?s:t)}_deleteOne(){}_deleteMany(){}_deleteWhere(){}_deleteAll(){}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */class l extends a.Writable{constructor(e){super(e);const r=e.bufferSize||s.kStringMaxLength;this.memoryBuffer=Buffer.alloc(r),this.offset=0}_final(e){e()}_write(e,r,t){const s=Buffer.isBuffer(e)?e:new Buffer(e,r);for(let e=0,r=s.length;e<r;e++)this.memoryBuffer[this.offset]=s[e],this.offset++;t()}_writev(e,r){for(let r=0,t=e.length;r<t;r++)this.memoryBuffer=Buffer.concat([this.memoryBuffer,e[r]]);r()}_releaseMemory(){this.memoryBuffer=null}toArrayBuffer(){const e=this.memoryBuffer,r=new ArrayBuffer(e.length),t=new Uint8Array(r);for(let r=0;r<e.length;++r)t[r]=e[r];return this._releaseMemory(),r}toJSON(){return JSON.parse(this.toString())}toString(){const e=this.memoryBuffer.toString();return this._releaseMemory(),e}}class d{constructor(e={}){const r={dumpType:d.DumpType.ArrayBuffer,...e};this.dumpType=r.dumpType,this._isProcessing=!1,this._queue=[]}get dumpType(){return this._dumpType}set dumpType(e){if(r.isNull(e))throw new TypeError("Dump type cannot be null ! Expect a non empty string.");if(r.isUndefined(e))throw new TypeError("Dump type cannot be undefined ! Expect a non empty string.");this._dumpType=e}setDumpType(e){return this.dumpType=e,this}convert(e,r,t,s,n){e?(this._queue.push({file:e,parameters:r,onSuccess:t,onProgress:s,onError:n}),this._processQueue()):n("File cannot be null or empty, aborting file convertion !!!")}_processQueue(){if(0===this._queue.length||this._isProcessing)return;this._isProcessing=!0;const e=this,t=this._queue.shift(),s=t.file,n=t.parameters,a=t.onSuccess,i=t.onProgress,o=t.onError;if(r.isString(s))e._dumpFileInMemoryAs(e._dumpType,s,n,u,c,p);else{const r=s.data;switch(e._dumpType){case d.DumpType.ArrayBuffer:{const e=r.length,t=new ArrayBuffer(e),s=new Uint8Array(t);for(let t=0;t<e;++t)s[t]=r[t];u(t)}break;case d.DumpType.JSON:u(JSON.parse(r.toString()));break;case d.DumpType.String:u(r.toString());break;default:throw new RangeError(`Invalid switch parameter: ${e._dumpType}`)}}function u(r){e._convert(r,n,l,c,p)}function l(r){a(r),e._isProcessing=!1,e._processQueue()}function c(e){i(e)}function p(r){o(r),e._isProcessing=!1,e._processQueue()}}_dumpFileInMemoryAs(e,r,t,s,a,i){let o=!1;const u=n.createReadStream(r);u.on("error",e=>{o=!0,i(e)});const c=parseInt(t.fileSize),p=new l({bufferSize:c});p.on("error",e=>{o=!0,i(e)}),p.on("finish",()=>{if(!o){switch(e){case d.DumpType.ArrayBuffer:s(p.toArrayBuffer());break;case d.DumpType.String:s(p.toString());break;case d.DumpType.JSON:s(p.toJSON());break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}u.unpipe(),u.close(),p.end()}}),u.pipe(p)}_convert(){}}d.MAX_FILE_SIZE=67108864,d.DumpType=Object.freeze({ArrayBuffer:0,String:1,JSON:2});
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class c{static _registerRoutesTo(e,r,t,s,n){for(let a=0,i=n.length;a<i;a++){const i=n[a],o=new(s.get(i.controller.name))({driver:e,...i.controller.options}),u=t({mergeParams:!0});console.log(`\tAdd controller for base route: ${i.route}`),r.use(i.route,c._populateRouter(u,o,i.controller.can))}}static _populateRouter(e,r,t={}){for(let s in t){const n=t[s];console.log(`\t\tMap route ${n.over} on (${n.on}) to ${r.constructor.name}.${s} method.`),e[n.on](n.over,r[s].bind(r))}return e}constructor(e={}){const r={controllers:new Map,descriptors:[],...e};this.controllers=r.controllers,this.descriptors=r.descriptors,this.__dirname=void 0}get controllers(){return this._controllers}set controllers(e){if(r.isNull(e))throw new TypeError("Controllers cannot be null ! Expect a map of controller.");if(r.isUndefined(e))throw new TypeError("Controllers cannot be undefined ! Expect a map of controller.");if(!(e instanceof Map))throw new TypeError(`Controllers cannot be an instance of ${e.constructor.name} ! Expect a map of controller.`);this._controllers=e}get descriptors(){return this._descriptors}set descriptors(e){if(r.isNull(e))throw new TypeError("Descriptors cannot be null ! Expect an array of POJO.");if(r.isUndefined(e))throw new TypeError("Descriptors cannot be undefined ! Expect an array of POJO.");this._descriptors=e}addController(e){return this._controllers.set(e.name,e),this}addDescriptor(e){return this._descriptors.push(e),this}beforeRegisterRoutes(){}registerTo(e,r,t){this.beforeRegisterRoutes(e),c._registerRoutesTo(e,r,t,this._controllers,this._descriptors)}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */exports.TMongoDBDatabase=
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class extends class{constructor(e={}){const r={driver:null,application:null,router:null,plugins:[],...e};this.driver=r.driver,this.application=r.application,this.router=r.router,this.plugins=r.plugins,this.init(),this._registerPlugins()}get plugins(){return this._plugins}set plugins(e){if(r.isNull(e))throw new TypeError("Plugins cannot be null ! Expect an array of TDatabasePlugin.");if(r.isUndefined(e))throw new TypeError("Plugins cannot be undefined ! Expect an array of TDatabasePlugin.");this._plugins=e}get router(){return this._router}set router(e){if(r.isNull(e))throw new TypeError("Router cannot be null ! Expect a Express Router.");if(r.isUndefined(e))throw new TypeError("Router cannot be undefined ! Expect a Express Router.");this._router=e}get application(){return this._application}set application(e){if(r.isNull(e))throw new TypeError("Application cannot be null ! Expect a Express Application.");if(r.isUndefined(e))throw new TypeError("Application cannot be undefined ! Expect a Express Application.");this._application=e}get driver(){return this._driver}set driver(e){if(r.isNull(e))throw new TypeError("Driver cannot be null ! Expect a database driver.");if(r.isUndefined(e))throw new TypeError("Driver cannot be undefined ! Expect a database driver.");this._driver=e}setPlugins(e){return this.plugins=e,this}setRouter(e){return this.router=e,this}setApplication(e){return this.application=e,this}setDriver(e){return this.driver=e,this}init(){}_registerPlugins(){for(let[e,r]of Object.entries(this._plugins))this._registerPackagePlugin(e,r)?console.log(`Use ${e} plugin from node_modules`):this._registerLocalPlugin(e,r)?console.log(`Use ${e} plugin from local folder`):console.error(`Unable to register the plugin ${e} the package or local folder doesn't seem to exist ! Skip it.`)}_registerPackagePlugin(e){let r=!1;try{const s=require(e);s instanceof c?(s.__dirname=t.dirname(require.resolve(e)),s.registerTo(this._driver,this._application,this._router),r=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){e.code&&"MODULE_NOT_FOUND"===e.code||console.error(e)}return r}_registerLocalPlugin(e){let r=!1;try{const s=t.join(__dirname,"../../../","databases/plugins/",e,`${e}.js`),n=require(s);n instanceof c?(n.__dirname=t.dirname(require.resolve(s)),n.registerTo(this._driver,this._application,this._router),r=!0):console.error(`The plugin ${e} doesn't seem to be an instance of an extended class from TAbstractDatabasePlugin ! Skip it.`)}catch(e){console.error(e)}return r}connect(){}close(){}on(){}}
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @class TMongooseController
 * @classdesc The TMongooseController is the base class to perform CRUD operations on the database
 */{constructor(e={}){const r={databaseUrl:"",...e,driver:o};super(r),this.databaseUrl=r.databaseUrl}close(e){this._driver.connection.close(e)}connect(){this._driver.connect(this.databaseUrl,{useNewUrlParser:!0}).then(e=>{console.log(`MongoDB at ${this.databaseUrl} is connected ! ${e}`)}).catch(e=>{console.error(e)})}init(){super.init()}on(e,r){-1!==["connecting","connected","open","disconnecting","disconnected","reconnected","close","error"].indexOf(e)&&this._driver.connection.on(e,r)}},exports.TMongoDBPlugin=
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 *
 * @file Todo
 *
 * @example Todo
 *
 */
class extends c{constructor(e={}){const r={types:[],schemas:[],...e};super(r),this.types=r.types,this.schemas=r.schemas}get schemas(){return this._schemas}set schemas(e){this._schemas=e}get types(){return this._types}set types(e){this._types=e}addSchema(e){return this._schemas.push(e),this}addType(e){return this._types.push(e),this}beforeRegisterRoutes(e){super.beforeRegisterRoutes(e),this._searchLocalTypes(),this._registerTypes(e),this._searchLocalSchemas(),this._registerSchemas(e)}_searchLocalTypes(){const e=t.join(this.__dirname,"types");if(r.isInvalidDirectoryPath(e))return void console.warn(`Unable to find "types" folder for path "${e}"`);console.log(`Add types from: ${e}`);const s=i.getFilesPathsUnder(e);let n="",a=void 0;for(let e=0,r=s.length;e<r;e++)n=s[e],a=require(n),this._types.push(a)}_registerTypes(e){for(let r of this._types)console.log(`Register type: ${r.name}`),r(e)}_searchLocalSchemas(){const e=t.join(this.__dirname,"schemas");if(r.isInvalidDirectoryPath(e))return void console.warn(`Unable to find "schemas" folder for path "${e}"`);console.log(`Add schemas from: ${e}`);const s=i.getFilesPathsUnder(e);let n="",a=void 0;for(let e=0,t=s.length;e<t;e++)n=s[e],r.isEmptyFile(n)?console.warn(`Skip empty local database schema: ${n}`):(a=require(n),this._schemas.push(a))}_registerSchemas(e){for(let t of this._schemas)console.log(`Register schema: ${t.name}`),r.isFunction(t.registerModelTo)?t.registerModelTo(e):r.isFunction(t)?t(e):console.error(`Unable to register local database schema: ${t}`)}},exports.TMongooseController=class extends u{constructor(e={}){const r={driver:null,schemaName:"",...e};super(r),this.databaseSchema=this._driver.model(r.schemaName)}get databaseSchema(){return this._databaseSchema}set databaseSchema(e){if(r.isNull(e))throw new TypeError("Database schema cannot be null.");if(r.isUndefined(e))throw new TypeError("Database schema cannot be undefined.");this._databaseSchema=e}setDatabaseSchema(e){return this.databaseSchema=e,this}_createMany(e,r){super._createMany(e,r),this._databaseSchema.create(e,this.return(r))}_createOne(e,r){super._createOne(e,r),this._databaseSchema.create(e,this.return(r))}_deleteAll(e){super._deleteAll(e),this._databaseSchema.collection.drop(this.return(e))}_deleteMany(e,r){super._deleteMany(e,r),this._databaseSchema.deleteMany({_id:{$in:e}},this.return(r))}_deleteOne(e,r){super._deleteOne(e,r),this._databaseSchema.findByIdAndDelete(e).then(e=>u.returnData(e,r)).catch(e=>u.returnError(e,r))}_deleteWhere(e,r){super._deleteWhere(e,r),this._databaseSchema.deleteMany(e,this.return(r))}_readAll(e,r){super._readAll(e,r),this._databaseSchema.find({},e).lean().exec().then(e=>u.returnData(e,r)).catch(e=>u.returnError(e,r))}_readMany(e,t,s){super._readMany(e,t,s),this._databaseSchema.find({_id:{$in:e}},t).lean().exec().then(t=>{r.isNull(t)||r.isEmptyArray(t)?u.returnNotFound(s):e.length!==t.length?u.returnErrorAndData({title:"Missing data",message:"Some requested objects could not be found."},t,s):u.returnData(t,s)}).catch(e=>u.returnError(e,s))}_readOne(e,t,s){super._readOne(e,t,s),this._databaseSchema.findById(e,t).lean().exec().then(e=>{r.isNull(e)?u.returnNotFound(s):u.returnData(e,s)}).catch(e=>u.returnError(e,s))}_readWhere(e,r,t){super._readWhere(e,r,t),this._databaseSchema.find(e,r).lean().exec().then(e=>u.returnData(e,t)).catch(e=>u.returnError(e,t))}_updateAll(e,r){super._updateAll(e,r),this._databaseSchema.update({},e,{multi:!0},this.return(r))}_updateMany(e,r,t){super._updateMany(e,r,t),this._databaseSchema.update({_id:{$in:e}},r,{multi:!0},this.return(t))}_updateOne(e,r,t){super._updateOne(e,r,t),this._databaseSchema.findByIdAndUpdate(e,r).exec().then(e=>u.returnData(e,t)).catch(e=>u.returnError(e,t))}_updateWhere(e,r,t){super._updateWhere(e,r,t),this._databaseSchema.update(e,r,{multi:!0},this.return(t))}};
